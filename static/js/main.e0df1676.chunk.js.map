{"version":3,"sources":["utils/clipboard.js","App.js","reportWebVitals.js","index.js"],"names":["clickToCopy","textToCopy","navigator","clipboard","window","isSecureContext","writeText","textArea","document","createElement","value","style","position","left","top","body","appendChild","focus","select","Promise","res","rej","execCommand","remove","colorMap","Map","set","COLORS","name","sibling","ColorItem","item","bgColor","get","bgClass","toLowerCase","replaceAll","color","className","backgroundColor","onClick","App","listItems","map","primaryColor","secondColor","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"4JAAaA,G,UAAc,SAACC,GAExB,GAAIC,UAAUC,WAAaC,OAAOC,gBAE9B,OAAOH,UAAUC,UAAUG,UAAUL,GAGrC,IAAIM,EAAWC,SAASC,cAAc,YAStC,OARAF,EAASG,MAAQT,EAEjBM,EAASI,MAAMC,SAAW,QAC1BL,EAASI,MAAME,KAAO,YACtBN,EAASI,MAAMG,IAAM,YACrBN,SAASO,KAAKC,YAAYT,GAC1BA,EAASU,QACTV,EAASW,SACF,IAAIC,SAAQ,SAACC,EAAKC,GAErBb,SAASc,YAAY,QAAUF,IAAQC,IACvCd,EAASgB,c,OChBfC,EAAW,IAAIC,IAErBD,EAASE,IAAI,YAAa,WAC1BF,EAASE,IAAI,YAAa,WAC1BF,EAASE,IAAI,UAAW,WACxBF,EAASE,IAAI,YAAa,WAC1BF,EAASE,IAAI,SAAU,WACvBF,EAASE,IAAI,UAAW,WACxBF,EAASE,IAAI,cAAe,WAC5BF,EAASE,IAAI,cAAe,WAC5BF,EAASE,IAAI,WAAY,WACzBF,EAASE,IAAI,WAAY,WACzBF,EAASE,IAAI,cAAe,WAC5BF,EAASE,IAAI,gBAAiB,WAC9BF,EAASE,IAAI,aAAc,WAC3BF,EAASE,IAAI,SAAU,WACvBF,EAASE,IAAI,SAAU,WACvBF,EAASE,IAAI,UAAW,WACxBF,EAASE,IAAI,WAAY,WACzBF,EAASE,IAAI,cAAe,WAC5BF,EAASE,IAAI,SAAU,WACvBF,EAASE,IAAI,SAAU,WACvBF,EAASE,IAAI,WAAY,WACzBF,EAASE,IAAI,WAAY,WAEzB,IAAMC,EAAS,CACX,CACIC,KAAM,YACNC,QAAS,aAEb,CACID,KAAM,UACNC,QAAS,aAEb,CACID,KAAM,cACNC,QAAS,eAEb,CACID,KAAM,WACNC,QAAS,YAEb,CACID,KAAM,cACNC,QAAS,iBAEb,CACID,KAAM,aACNC,QAAS,UAEb,CACID,KAAM,SACNC,QAAS,WAEb,CACID,KAAM,WACNC,QAAS,eAEb,CACID,KAAM,SACNC,QAAS,UAEb,CACID,KAAM,WACNC,QAAS,aAIjB,SAASC,EAAT,GAA4B,IAARC,EAAO,EAAPA,KACVC,EAAUR,EAASS,IAAIF,GACvBG,EAAO,cAAUH,EAAKI,cAAcC,WAAW,IAAK,MACpDC,EAAQb,EAASS,IAAIF,GAC3B,OACI,gCACI,qBAAKO,UAAW,8BAA+B3B,MAAO,CAAC4B,gBAAiBP,GACnEQ,QAAS,kBAAMxC,EAAYkC,IADhC,SAC2CH,IAC3C,qBAAKO,UAAW,8BAA+B3B,MAAO,CAAC4B,gBAAiBP,GACnEQ,QAAS,kBAAMxC,EAAYqC,IADhC,SACyCA,OAsBtCI,MAjBf,WACI,IAAMC,EAAYf,EAAOgB,KAAI,SAACN,GAC1B,IAAMO,EAAeP,EAAMT,KACrBiB,EAAcR,EAAMR,QAC1B,OACI,sBAAKS,UAAU,UAAf,UACI,cAACR,EAAD,CAAWC,KAAMa,IACjB,cAACd,EAAD,CAAWC,KAAMc,MAFSR,EAAMT,SAK5C,OACI,qBAAKU,UAAU,eAAf,SACKI,KCrFEI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjD,SAASkD,eAAe,SAM1BZ,K","file":"static/js/main.e0df1676.chunk.js","sourcesContent":["export const clickToCopy = (textToCopy) => {\n    // navigator clipboard api needs a secure context (https)\n    if (navigator.clipboard && window.isSecureContext) {\n        // navigator clipboard api method'\n        return navigator.clipboard.writeText(textToCopy);\n    } else {\n        // text area method\n        let textArea = document.createElement(\"textarea\");\n        textArea.value = textToCopy;\n        // make the textarea out of viewport\n        textArea.style.position = \"fixed\";\n        textArea.style.left = \"-999999px\";\n        textArea.style.top = \"-999999px\";\n        document.body.appendChild(textArea);\n        textArea.focus();\n        textArea.select();\n        return new Promise((res, rej) => {\n            // here the magic happens\n            document.execCommand('copy') ? res() : rej();\n            textArea.remove();\n        });\n    }\n}\n","import './App.css';\nimport {clickToCopy} from \"./utils/clipboard\";\n\nconst colorMap = new Map();\n\ncolorMap.set('TURQUOISE', '#1ABC9C');\ncolorMap.set('GREEN SEA', '#16A085');\ncolorMap.set('EMERALD', '#2ECC71');\ncolorMap.set('NEPHRITIS', '#27AE60');\ncolorMap.set('CARROT', '#E67E22');\ncolorMap.set('PUMPKIN', '#D35400');\ncolorMap.set('PETER RIVER', '#3498DB');\ncolorMap.set('BELIZE HOLE', '#2980B9');\ncolorMap.set('AMETHYST', '#9B59B6');\ncolorMap.set('WISTERIA', '#8E44AD');\ncolorMap.set('WET ASPHALT', '#34495E');\ncolorMap.set('MIDNIGHT BLUE', '#2C3E50');\ncolorMap.set('SUN FLOWER', '#F1C40F');\ncolorMap.set('ORANGE', '#F39C12');\ncolorMap.set('CARROT', '#E67E22');\ncolorMap.set('PUMPKIN', '#D35400');\ncolorMap.set('ALIZARIN', '#E74C3C');\ncolorMap.set('POMEGRANATE', '#C0392B');\ncolorMap.set('CLOUDS', '#ECF0F1');\ncolorMap.set('SILVER', '#BDC3C7');\ncolorMap.set('CONCRETE', '#95A5A6');\ncolorMap.set('ASBESTOS', '#7F8C8D');\n\nconst COLORS = [\n    {\n        name: 'TURQUOISE',\n        sibling: 'GREEN SEA'\n    },\n    {\n        name: 'EMERALD',\n        sibling: 'NEPHRITIS',\n    },\n    {\n        name: 'PETER RIVER',\n        sibling: 'BELIZE HOLE'\n    },\n    {\n        name: 'AMETHYST',\n        sibling: 'WISTERIA',\n    },\n    {\n        name: 'WET ASPHALT',\n        sibling: 'MIDNIGHT BLUE',\n    },\n    {\n        name: 'SUN FLOWER',\n        sibling: 'ORANGE'\n    },\n    {\n        name: 'CARROT',\n        sibling: 'PUMPKIN',\n    },\n    {\n        name: 'ALIZARIN',\n        sibling: 'POMEGRANATE',\n    },\n    {\n        name: 'CLOUDS',\n        sibling: 'SILVER'\n    },\n    {\n        name: 'CONCRETE',\n        sibling: 'ASBESTOS',\n    }\n];\n\nfunction ColorItem({item}) {\n    const bgColor = colorMap.get(item);\n    const bgClass = `bg--${item.toLowerCase().replaceAll(' ', '-')}`;\n    const color = colorMap.get(item);\n    return (\n        <div>\n            <div className={'section__item flex--center '} style={{backgroundColor: bgColor}}\n                 onClick={() => clickToCopy(bgClass)}>{item}</div>\n            <div className={'section__item flex--center '} style={{backgroundColor: bgColor}}\n                 onClick={() => clickToCopy(color)}>{color}</div>\n        </div>\n    );\n}\n\nfunction App() {\n    const listItems = COLORS.map((color) => {\n        const primaryColor = color.name;\n        const secondColor = color.sibling;\n        return (\n            <div className=\"section\" key={color.name}>\n                <ColorItem item={primaryColor}></ColorItem>\n                <ColorItem item={secondColor}></ColorItem>\n            </div>);\n    });\n    return (\n        <div className=\"d-grid col-6\">\n            {listItems}\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}